// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Functional component render HOC component with shallow render of the wrapped component 1`] = `
<div
  id="MyComponent"
/>
`;

exports[`Functional component render direct StrictMode wrapper around react component with a single child element 1`] = `
<StrictMode>
  <MyComponent>
    <h1>
      Hello World One
    </h1>
  </MyComponent>
</StrictMode>
`;

exports[`Functional component render direct forwarded wrapper around react component with a single child element 1`] = `
<ForwardRef(MyForwardedComponent)>
  <h1>
    Hello World One
  </h1>
</ForwardRef(MyForwardedComponent)>
`;

exports[`Functional component render direct memoized wrapper around react component with a single child element 1`] = `
<Memo(MyComponent)>
  <h1>
    Hello World One
  </h1>
</Memo(MyComponent)>
`;

exports[`Functional component render direct profiler wrapper around react component with a single child element 1`] = `
<Profiler
  id="profiler"
  onRender={[Function]}
>
  <MyComponent>
    <h1>
      Hello World One
    </h1>
  </MyComponent>
</Profiler>
`;

exports[`Functional component render direct suspense wrapper around react component with a single child element 1`] = `
<Suspense
  fallback={
    <div>
      Loading...
    </div>
  }
>
  <MyComponent>
    <h1>
      Hello World One
    </h1>
  </MyComponent>
</Suspense>
`;

exports[`Functional component render direct wrapper around components and more wrappers 1`] = `
<WrapperAroundMyComponent>
  <div>
    <MyComponent>
      <span>
        Hello
      </span>
      <div>
        txt
        <MyComponent />
      </div>
    </MyComponent>
  </div>
</WrapperAroundMyComponent>
`;

exports[`Functional component render direct wrapper around react component that wraps another react component 1`] = `
<WrapperAroundMyComponent>
  <h1>
    Hello World One
  </h1>
</WrapperAroundMyComponent>
`;

exports[`Functional component render direct wrapper around react component with a single child element 1`] = `
<MyComponent>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render direct wrapper around react component with a single child element and children on second position 1`] = `
<MyComponentWithChildrenOnSecondPosition>
  <h1>
    Hello World One
  </h1>
</MyComponentWithChildrenOnSecondPosition>
`;

exports[`Functional component render direct wrapper around react component with a single child element and props 1`] = `
<MyComponent
  something="beautiful"
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render direct wrapper around react component with multiple deep child elements 1`] = `
<MyComponent>
  <MyComponent>
    <h1>
      Hello World One
    </h1>
  </MyComponent>
</MyComponent>
`;

exports[`Functional component render direct wrapper around react component with no child element 1`] = `<MyComponent />`;

exports[`Functional component render fragment wrapper around react component with multiple children 1`] = `
<Fragment>
  <Fragment>
    <div />
    <MyComponent />
    1234
    Hello World
  </Fragment>
</Fragment>
`;

exports[`Functional component render fragment wrapper around react component with single text child 1`] = `
<MyComponent>
  <Fragment>
    Some random text
  </Fragment>
</MyComponent>
`;

exports[`Functional component render react component with another react component and native component as a child 1`] = `
<MyComponent>
  <div />
  <MyComponent />
</MyComponent>
`;

exports[`Functional component render react component with another react component as a child 1`] = `
<MyComponent>
  <MyComponent />
</MyComponent>
`;

exports[`Functional component render react component with another whitelisted react component and native component as a child 1`] = `
<MyComponent>
  <div />
  <MyComponent />
  <MyOtherComponent />
</MyComponent>
`;

exports[`Functional component render react component with array of children and component sibling 1`] = `
<div>
  <div />
  <div />
  <div />
  <div />
  <div />
</div>
`;

exports[`Functional component render react component with deeply nested multiple react components as a child 1`] = `
<MyComponent>
  <WrapperAroundMyComponent>
    <WrapperAroundMyComponent>
      <MyComponent />
      <div />
      <MyComponent />
    </WrapperAroundMyComponent>
    <WrapperAroundMyComponent>
      <MyComponent />
      <div />
      <MyComponent />
    </WrapperAroundMyComponent>
  </WrapperAroundMyComponent>
</MyComponent>
`;

exports[`Functional component render react component with displayName and string component argument 1`] = `<MyComponent />`;

exports[`Functional component render react component with portal 1`] = `
<MyComponent>
  <Portal>
    <h1>
      Hello World One
    </h1>
  </Portal>
</MyComponent>
`;

exports[`Functional component render react component with state changed 0 times 1`] = `
<MyComponent
  data-testid={0}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with state changed 1 times 1`] = `
<MyComponent
  data-testid={1}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with state changed 2 times 1`] = `
<MyComponent
  data-testid={2}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with state changed 3 times 1`] = `
<MyComponent
  data-testid={3}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with string component argument 1`] = `<MyComponent />`;

exports[`Functional component render react component with useCallback 1`] = `
<MyComponent>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useContext 1`] = `
<MyComponent>
  <h1>
    Hello World
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useDebugValue 1`] = `
<MyComponent>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useEffect 1`] = `
<MyComponent>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useEffect and state changed 0 times 1`] = `
<MyComponent
  data-testid={0}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useEffect and state changed 1 times 1`] = `
<MyComponent
  data-testid={1}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useEffect and state changed 2 times 1`] = `
<MyComponent
  data-testid={2}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useEffect and state changed 3 times 1`] = `
<MyComponent
  data-testid={3}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useLayoutEffect 1`] = `
<MyComponent>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useMemo 1`] = `
<MyComponent>
  <h1>
    Hello World
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useReducer changed 0 times 1`] = `
<MyComponent
  data-testid={0}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useReducer changed 1 times 1`] = `
<MyComponent
  data-testid={1}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useReducer changed 2 times 1`] = `
<MyComponent
  data-testid={2}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useReducer changed 3 times 1`] = `
<MyComponent
  data-testid={3}
>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render react component with useRef 1`] = `
<MyComponent>
  <h1>
    Hello World One
  </h1>
</MyComponent>
`;

exports[`Functional component render wrapped in React.forwardRef 1`] = `
<MyComponent>
  Hello World One
</MyComponent>
`;

exports[`Functional component render wrapped in React.memo 1`] = `
<MyComponent>
  Hello World One
</MyComponent>
`;

exports[`Functional component render wrapper around react component with multiple children 1`] = `
<div>
  <MyComponent>
    <h2>
      Hello World Two
    </h2>
    Some random text
  </MyComponent>
</div>
`;

exports[`Functional component render wrapper around react component with single number child 1`] = `
<div>
  <MyComponent>
    1234
  </MyComponent>
</div>
`;

exports[`Functional component render wrapper around react component with single text child 1`] = `
<div>
  <MyComponent>
    Some random text
  </MyComponent>
</div>
`;
